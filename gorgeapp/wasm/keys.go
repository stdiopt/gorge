//go:build (js && ignore) || wasm

package wasm

import "github.com/stdiopt/gorge/systems/input"

var keyMap = map[string]input.Key{
	"Space":        input.KeySpace,
	"Quote":        input.KeyApostrophe,
	"Comma":        input.KeyComma,
	"Minus":        input.KeyMinus,
	"Period":       input.KeyPeriod,
	"Slash":        input.KeySlash,
	"Digit0":       input.Key0,
	"Digit1":       input.Key1,
	"Digit2":       input.Key2,
	"Digit3":       input.Key3,
	"Digit4":       input.Key4,
	"Digit5":       input.Key5,
	"Digit6":       input.Key6,
	"Digit7":       input.Key7,
	"Digit8":       input.Key8,
	"Digit9":       input.Key9,
	"Semicolon":    input.KeySemicolon,
	"Equal":        input.KeyEqual,
	"KeyA":         input.KeyA,
	"KeyB":         input.KeyB,
	"KeyC":         input.KeyC,
	"KeyD":         input.KeyD,
	"KeyE":         input.KeyE,
	"KeyF":         input.KeyF,
	"KeyG":         input.KeyG,
	"KeyH":         input.KeyH,
	"KeyI":         input.KeyI,
	"KeyJ":         input.KeyJ,
	"KeyK":         input.KeyK,
	"KeyL":         input.KeyL,
	"KeyM":         input.KeyM,
	"KeyN":         input.KeyN,
	"KeyO":         input.KeyO,
	"KeyP":         input.KeyP,
	"KeyQ":         input.KeyQ,
	"KeyR":         input.KeyR,
	"KeyS":         input.KeyS,
	"KeyT":         input.KeyT,
	"KeyU":         input.KeyU,
	"KeyV":         input.KeyV,
	"KeyW":         input.KeyW,
	"KeyX":         input.KeyX,
	"KeyY":         input.KeyY,
	"KeyZ":         input.KeyZ,
	"BracketLeft":  input.KeyLeftBracket,
	"Backslash":    input.KeyBackslash,
	"BracketRight": input.KeyRightBracket,
	"Backquote":    input.KeyGraveAccent,

	//		glfw.KeyWorld1:       input.KeyWorld1,
	//		glfw.KeyWorld2:       input.KeyWorld2,

	"Escape": input.KeyEscape,

	"Enter":     input.KeyEnter,
	"Tab":       input.KeyTab,
	"Backspace": input.KeyBackspace,
	"Insert":    input.KeyInsert,
	"Delete":    input.KeyDelete,

	"ArrowRight": input.KeyArrowRight,
	"ArrowLeft":  input.KeyArrowLeft,
	"ArrowDown":  input.KeyArrowDown,
	"ArrowUp":    input.KeyArrowUp,

	"PageUp":      input.KeyPageUp,
	"PageDown":    input.KeyPageDown,
	"Home":        input.KeyHome,
	"End":         input.KeyEnd,
	"CapsLock":    input.KeyCapsLock,
	"ScrollLock":  input.KeyScrollLock, //?
	"NumLock":     input.KeyNumLock,    //?
	"PrintScreen": input.KeyPrintScreen,
	"Pause":       input.KeyPause, //?
	"F1":          input.KeyF1,
	"F2":          input.KeyF2,
	"F3":          input.KeyF3,
	"F4":          input.KeyF4,
	"F5":          input.KeyF5,
	"F6":          input.KeyF6,
	"F7":          input.KeyF7,
	"F8":          input.KeyF8,
	"F9":          input.KeyF9,
	"F10":         input.KeyF10,
	"F11":         input.KeyF11,
	"F12":         input.KeyF12,
	/*
		glfw.KeyF13:          input.KeyF13,
		glfw.KeyF14:          input.KeyF14,
		glfw.KeyF15:          input.KeyF15,
		glfw.KeyF16:          input.KeyF16,
		glfw.KeyF17:          input.KeyF17,
		glfw.KeyF18:          input.KeyF18,
		glfw.KeyF19:          input.KeyF19,
		glfw.KeyF20:          input.KeyF20,
		glfw.KeyF21:          input.KeyF21,
		glfw.KeyF22:          input.KeyF22,
		glfw.KeyF23:          input.KeyF23,
		glfw.KeyF24:          input.KeyF24,
		glfw.KeyF25:          input.KeyF25,
		glfw.KeyKP0:          input.KeyKP0,
		glfw.KeyKP1:          input.KeyKP1,
		glfw.KeyKP2:          input.KeyKP2,
		glfw.KeyKP3:          input.KeyKP3,
		glfw.KeyKP4:          input.KeyKP4,
		glfw.KeyKP5:          input.KeyKP5,
		glfw.KeyKP6:          input.KeyKP6,
		glfw.KeyKP7:          input.KeyKP7,
		glfw.KeyKP8:          input.KeyKP8,
		glfw.KeyKP9:          input.KeyKP9,
		glfw.KeyKPDecimal:    input.KeyKPDecimal,
		glfw.KeyKPDivide:     input.KeyKPDivide,
		glfw.KeyKPMultiply:   input.KeyKPMultiply,
		glfw.KeyKPSubtract:   input.KeyKPSubtract,
		glfw.KeyKPAdd:        input.KeyKPAdd,
		glfw.KeyKPEnter:      input.KeyKPEnter,
		glfw.KeyKPEqual:      input.KeyKPEqual,
	*/
	"ShiftLeft":    input.KeyLeftShift,
	"ControlLeft":  input.KeyLeftControl,
	"AltLeft":      input.KeyLeftAlt,
	"MetaLeft":     input.KeyLeftSuper,
	"ShiftRight":   input.KeyRightShift,
	"ControlRight": input.KeyRightControl,
	"AltRight":     input.KeyRightAlt,
	"MetaRight":    input.KeyRightSuper,
	"ContextMenu":  input.KeyMenu,
}
